{"version":3,"file":"static/js/139.1f0f923f.chunk.js","mappings":"2NAGaA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAejB,OACE,kBAAMC,SAda,SAAAC,GACnBA,EAAEC,iBAEF,IAAMC,EAAOF,EAAEG,cACTC,EAAOF,EAAKE,KAAKC,MACjBC,EAAQJ,EAAKI,MAAMD,MACnBE,EAAWL,EAAKK,SAASF,MAE/BR,GAASW,EAAAA,EAAAA,IAAS,CAAEJ,KAAAA,EAAME,MAAAA,EAAOC,SAAAA,KAEjCL,EAAKO,OACN,EAG+BC,aAAa,MAA3C,WACE,yCAEE,kBAAOC,KAAK,OAAOP,KAAK,aAE1B,sCAEE,kBAAOO,KAAK,QAAQP,KAAK,cAE3B,yCAEE,kBAAOO,KAAK,WAAWP,KAAK,iBAE9B,mBAAQO,KAAK,SAAb,wBAGL,ECjCc,SAASC,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,+CAEF,SAACjB,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { register } from '../../Redux/UserAuth/operations';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    const name = form.name.value;\n    const email = form.email.value;\n    const password = form.password.value;\n\n    dispatch(register({ name, email, password }));\n\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <label>\n        Username\n        <input type=\"text\" name=\"name\" />\n      </label>\n      <label>\n        Email\n        <input type=\"email\" name=\"email\" />\n      </label>\n      <label>\n        Password\n        <input type=\"password\" name=\"password\" />\n      </label>\n      <button type=\"submit\">Register</button>\n    </form>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["RegisterForm","dispatch","useDispatch","onSubmit","e","preventDefault","form","currentTarget","name","value","email","password","register","reset","autoComplete","type","Register","Helmet"],"sourceRoot":""}