{"version":3,"file":"static/js/353.716d6e96.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/Filter/Filter.styled.jsx","Redux/Contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","../node_modules/nanoid/index.browser.js","components/Filter/Filter.jsx","pages/Phonebook.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const BtnAddContact = styled.button`\n  margin-left: 15px;\n  padding: 10px;\n  background-color: lightgreen;\n  border-style: none;\n  border-radius: 10px;\n  :hover {\n    background-color: green;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const FilterStyle = styled.input`\n  display: block;\n  margin-left: 50px;\n  margin-top: 15px;\n  border-radius: 10px;\n  width: 200px;\n  padding: 10px;\n  :hover {\n    border-color: lightblue;\n  }\n`;\n","// export const selectContacts = state => state.contactsSlice.contacts.items;\n// export const selectFilter = state => state.contactsSlice.contacts.filter.value;\n// export const selectLoadingStatus = state => state.contactsSlice.isLoading;\n// export const selectError = state => state.contactsSlice.error;\n\nexport const selectContacts = state => state.contacts.contacts.items;\nexport const selectFilter = state => state.contacts.contacts.filter;\nexport const selectLoadingStatus = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BtnAddContact } from './ContactForm.styled';\nimport { FilterStyle } from 'components/Filter/Filter.styled';\nimport { selectContacts } from 'Redux/Contacts/selectors';\nimport { addContacts } from 'Redux/Contacts/operations';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n\n  const onAddContact = data => {\n    const checkContact = contacts.find(contact => contact.name === data.name);\n\n    checkContact\n      ? alert(`${data.name} is already in the contacts`)\n      : dispatch(addContacts(data));\n  };\n\n  const onFormInput = evt => {\n    const chooseOption = evt.target.name;\n\n    switch (chooseOption) {\n      case 'name':\n        setName(evt.target.value);\n        break;\n\n      case 'number':\n        setNumber(evt.target.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const onNewSubmit = evt => {\n    evt.preventDefault();\n    onAddContact({ name, number });\n    reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={onNewSubmit}>\n        <label htmlFor=\"contact_name\">\n          Name\n          <FilterStyle\n            id=\"contact_name\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={onFormInput}\n          />\n        </label>\n        Number\n        <label htmlFor=\"contact_id\">\n          <FilterStyle\n            id=\"contact_id\"\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={onFormInput}\n          />\n        </label>\n        <BtnAddContact type=\"submit\">Add contact</BtnAddContact>\n      </form>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactListStyle = styled.ul`\n  list-style: none;\n`;\n\nexport const ContactListItemStyle = styled.li`\n  margin-bottom: 15px;\n  display: flex;\n`;\n\nexport const DeleteButton = styled.button`\n  margin-left: 15px;\n  background-color: lightcoral;\n  border-style: none;\n  border-radius: 10px;\n  :hover {\n    background-color: orange;\n  }\n`;\n","import {\n  ContactListStyle,\n  ContactListItemStyle,\n  DeleteButton,\n} from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectError,\n  selectFilter,\n  selectLoadingStatus,\n} from 'Redux/Contacts/selectors';\n\nimport { deleteContacts } from '../../Redux/Contacts/operations';\nimport { nanoid } from 'nanoid';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const isLoading = useSelector(selectLoadingStatus);\n  const error = useSelector(selectError);\n\n  const filterToLowerCase = filter.toLocaleLowerCase();\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toString().toLowerCase().includes(filterToLowerCase)\n  );\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {isLoading ? (\n        <h3>Loading contacts</h3>\n      ) : (\n        <ContactListStyle>\n          {error && <h3>{error}</h3>}\n\n          {filteredContacts.length >= 1 ? (\n            filteredContacts.map(({ id, name, number }) => (\n              <ContactListItemStyle key={nanoid()}>\n                {name}: {number}\n                <DeleteButton\n                  type=\"button\"\n                  onClick={() => dispatch(deleteContacts(id))}\n                >\n                  Delete\n                </DeleteButton>\n              </ContactListItemStyle>\n            ))\n          ) : (\n            <h3>No contacts yet</h3>\n          )}\n        </ContactListStyle>\n      )}\n    </>\n  );\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { selectFilter } from 'Redux/Contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FilterStyle } from './Filter.styled';\nimport { setFilter } from '../../Redux/Contacts/contactsSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const onFormInput = evt => {\n    dispatch(setFilter(evt.target.value));\n  };\n  return (\n    <label>\n      Find contacts by name\n      <FilterStyle\n        onChange={onFormInput}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n      />\n    </label>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm/ContactForm.jsx';\nimport { ContactList } from 'components/ContactList/ContactList.jsx';\nimport { Filter } from 'components/Filter/Filter.jsx';\n\nimport { fetchContacts } from '../Redux/Contacts/operations';\n\nexport default function Phonebook() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <ContactForm />\n\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["BtnAddContact","styled","FilterStyle","selectContacts","state","contacts","items","selectFilter","filter","selectLoadingStatus","isLoading","selectError","error","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","onFormInput","evt","target","value","onSubmit","data","preventDefault","find","contact","alert","addContacts","htmlFor","id","type","pattern","title","required","onChange","ContactListStyle","ContactListItemStyle","DeleteButton","ContactList","filterToLowerCase","toLocaleLowerCase","filteredContacts","toString","toLowerCase","includes","Loader","length","map","onClick","deleteContacts","size","crypto","getRandomValues","Uint8Array","reduce","byte","toUpperCase","nanoid","Filter","setFilter","Phonebook","useEffect","fetchContacts"],"sourceRoot":""}